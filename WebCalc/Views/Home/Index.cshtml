@model WebCalc.ViewModel.UserCalcViewModel

@{
    ViewBag.Title = "Веб Калькулятор";
}

<div class="jumbotron">
    <h1>Веб калькулятор</h1>
    <p class="lead">Веб калькулятор запоминает адрес вашего компьютера и показывает историю ваших вычислений</p>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<form name="calculator" class="form-horizontal" style="padding-bottom: 10px;">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @*<label class="control-label col-md-2">Формула</label>*@
        <div class="col-md-10">
            @Html.EditorFor(model => Model.Input, new { Name = "display", htmlAttributes = new { @class = "form-control" } })
            @*@Html.ValidationMessageFor(model => Model.Input, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <br />
    <table>
        <tr>
            @*<td colspan="4">
                    <input type="text" name="display" id="display" disabled>
                </td>*@
        </tr>
        <tr>
            <td style="padding: 5px;"><input style="min-width: 40px;" type="button" name="one" value="1" class="btn btn-lg" onclick="display.value += '1'"></td>
            <td style="padding: 5px;"><input type="button" name="two" value="2" class="btn btn-lg" onclick="display.value += '2'"></td>
            <td style="padding: 5px;"><input type="button" name="three" value="3" class="btn btn-lg" onclick="display.value += '3'"></td>
            <td style="padding: 5px;"><input style="min-height: 45px; min-width: 45px;" type="button" name="plus" value="+" class="btn btn-lg" onclick="display.value += '+'"></td>
        </tr>
        <tr>
            <td style="padding: 5px;"><input type="button" name="four" value="4" class="btn btn-lg" onclick="display.value += '4'"></td>
            <td style="padding: 5px;"><input type="button" name="five" value="5" class="btn btn-lg" onclick="display.value += '5'"></td>
            <td style="padding: 5px;"><input type="button" name="six" value="6" class="btn btn-lg" onclick="display.value += '6'"></td>
            <td style="padding: 5px;"><input style="min-height: 45px; min-width: 45px;" type="button" name="minus" value="-" class="btn btn-lg" onclick="display.value += '-'"></td>
        </tr>
        @*class="operator" *@
        <tr>
            <td style="padding: 5px;"><input type="button" name="seven" value="7" class="btn btn-lg" onclick="display.value += '7'"></td>
            <td style="padding: 5px;"><input type="button" name="eight" value="8" class="btn btn-lg" onclick="display.value += '8'"></td>
            <td style="padding: 5px;"><input type="button" name="nine" value="9" class="btn btn-lg" onclick="display.value += '9'"></td>
            <td style="padding: 5px;"><input style="min-height: 45px; min-width: 45px;" type="button" name="times" value="x" class="btn btn-lg" onclick="display.value += '*'"></td>
        </tr>
        <tr>
            <td style="padding: 5px;"><input type="button" id="clear" name="clear" value="c" class="btn btn-lg" onclick="display.value = ''"></td>
            <td style="padding: 5px;"><input type="button" name="zero" value="0" class="btn btn-lg" onclick="display.value += '0'"></td>
            <td style="padding: 5px;"><input type="submit" name="doit" value="=" class="btn btn-lg" onclick="display.value = eval(display.value)"></td>
            <td style="padding: 5px;"><input style="min-height: 45px; min-width: 45px;" type="button" name="div" value="/" class="btn btn-lg" onclick="display.value += '/'"></td>
        </tr>
    </table>
    <div class="form-group">
        @*<label class="control-label col-md-2">Формула</label>*@
        <div class="col-md-10">
            @Html.DisplayFor(model => Model.Result, new { Name = "result", htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => Model.Result, "", new { @class = "text-danger" })
        </div>
    </div>
</form>
}

<div>
    <div>
        @Html.DisplayFor(model => model.PreResult)
    </div>
    <div>
        @Html.DisplayFor(model => model.Result)
    </div>
</div>